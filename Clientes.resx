<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /gOOeWiiKWhQzgAAAABJRU5ErkJggg==
</value>
  </data>
</root>